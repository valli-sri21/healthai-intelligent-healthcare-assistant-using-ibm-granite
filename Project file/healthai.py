# -*- coding: utf-8 -*-
"""healthai.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dafCZy_xWfs_FTqSuD6ua9l2fguQ5RDC
"""

!pip install transformers accelerate gradio

from transformers import AutoTokenizer, AutoModelForCausalLM

# Replace this with your API token
HF_TOKEN = "Place your token here"

model_id = "ibm-granite/granite-3.3-2b-instruct"

# Load tokenizer and model
tokenizer = AutoTokenizer.from_pretrained(model_id, use_auth_token=HF_TOKEN)
model = AutoModelForCausalLM.from_pretrained(model_id, device_map="auto")

health_keywords = [
    # --- General Medical ---
    "health", "wellness", "checkup", "screening", "ill", "illness", "disease", "disorder", "syndrome",
    "diagnosis", "prognosis", "symptom", "treatment", "condition", "complication", "consultation",

    # --- Vital Signs & Metrics ---
    "blood pressure", "heart rate", "temperature", "oxygen saturation", "pulse", "bmi", "weight", "height",

    # --- Nutritional Science ---
    "nutrition", "nutrient", "calories", "vitamin", "mineral", "protein", "carbohydrate", "fat",
    "omega 3", "omega 6", "fiber", "iron", "calcium", "magnesium", "zinc", "potassium", "sodium",
    "phosphorus", "iodine", "selenium", "folate", "vitamin a", "vitamin b", "vitamin b12", "vitamin c",
    "vitamin d", "vitamin e", "vitamin k", "niacin", "riboflavin", "thiamine", "biotin", "pantothenic acid",

    # --- Food & Diets ---
    "balanced diet", "keto", "ketogenic", "low carb", "high protein", "high fiber", "gluten free", "dairy free",
    "vegan", "vegetarian", "mediterranean diet", "paleo", "low sodium", "whole30", "pescatarian", "raw food diet",
    "intermittent fasting", "dash diet", "detox", "superfoods", "antioxidants", "anti-inflammatory", "hydration",
    "smoothie", "salad", "greens", "herbal tea", "plant-based",

    # --- Food Allergies & Intolerances ---
    "gluten", "lactose", "soy allergy", "nut allergy", "shellfish allergy", "egg allergy", "celiac disease",
    "lactose intolerance", "food sensitivity", "histamine intolerance", "FODMAP",

    # --- Superfoods & Herbs ---
    "turmeric", "ginger", "garlic", "flaxseed", "chia", "spinach", "kale", "avocado", "broccoli", "berries",
    "blueberry", "green tea", "matcha", "apple cider vinegar", "ginseng", "ashwagandha", "maca", "aloe vera",
    "cinnamon", "peppermint", "parsley", "coriander", "basil", "moringa", "spirulina", "chlorella",

    # --- Supplements ---
    "supplement", "multivitamin", "probiotic", "prebiotic", "collagen", "creatine", "electrolyte",
    "glucosamine", "melatonin", "fish oil", "fiber supplement", "protein powder", "whey protein",
    "plant protein", "vitamin d3", "zinc tablet", "iron capsule", "folic acid",

    # --- Symptoms & Conditions ---
    "pain", "headache", "fever", "cough", "nausea", "fatigue", "dizziness", "rash", "swelling",
    "constipation", "diarrhea", "indigestion", "bloating", "acid reflux", "gas", "heartburn",
    "low energy", "brain fog", "joint pain", "muscle soreness", "sleepiness", "chest pain",

    # --- Chronic Conditions & Disorders ---
    "diabetes", "asthma", "arthritis", "heart disease", "stroke", "cancer", "hypertension", "obesity",
    "cholesterol", "anemia", "thyroid", "gout", "IBS", "ulcerative colitis", "crohn's", "fatty liver",
    "hepatitis", "lupus", "celiac", "psoriasis", "eczema", "osteoporosis", "parkinson", "alzheimer",

    # --- Mental Health ---
    "depression", "anxiety", "stress", "insomnia", "ptsd", "bipolar", "schizophrenia", "burnout",
    "mental health", "mindfulness", "therapy", "counseling", "meditation", "panic attack", "sleep disorder",

    # --- Sleep Health ---
    "sleep", "sleep apnea", "REM", "deep sleep", "snoring", "sleep hygiene", "circadian rhythm",
    "melatonin", "oversleeping", "nightmare", "restless leg syndrome",

    # --- Infectious Diseases ---
    "covid", "flu", "cold", "pneumonia", "tuberculosis", "dengue", "malaria", "hepatitis b", "hepatitis c",
    "hiv", "aids", "std", "sti", "viral infection", "bacterial infection", "fungal infection", "fever",

    # --- Reproductive & Hormonal Health ---
    "menstruation", "period", "pms", "menopause", "ovulation", "fertility", "pregnancy", "birth control",
    "contraceptive", "hormone", "estrogen", "progesterone", "testosterone", "pap smear", "mammogram",

    # --- Medical Tests & Procedures ---
    "x-ray", "mri", "ct scan", "ecg", "blood test", "urine test", "stool test", "biopsy", "endoscopy",
    "colonoscopy", "ultrasound", "vaccination", "immunization", "dialysis", "injection", "iv", "anesthesia",
    "operation", "surgery", "chemotherapy", "radiation", "treatment plan", "prescription", "referral",

    # --- Emergency & First Aid ---
    "first aid", "cpr", "ambulance", "emergency", "trauma", "burn", "fracture", "sprain", "sting",
    "bite", "shock", "bandage", "resuscitation", "dislocation", "wound care", "bleeding",

    # --- Healthcare Professionals & Facilities ---
    "doctor", "nurse", "physician", "surgeon", "therapist", "psychiatrist", "nutritionist", "dietitian",
    "dentist", "pediatrician", "gynecologist", "neurologist", "cardiologist", "oncologist", "hospital",
    "clinic", "pharmacy", "ICU", "ward", "operating room", "rehabilitation", "home care", "nursing home",

    # --- Miscellaneous Medical Topics ---
    "side effect", "allergy", "vaccine reaction", "drug interaction", "placebo", "withdrawal",
    "addiction", "immune system", "inflammation", "metabolism", "digestion", "liver detox", "gut health"
]

import torch

def is_health_related(prompt):
    prompt = prompt.lower()
    return any(keyword in prompt for keyword in health_keywords)

def healthai_response(prompt):
    if not is_health_related(prompt):
        return "âš  I'm designed to answer only health-related questions. Please ask something related to health, symptoms, treatment, or wellness."

    inputs = tokenizer(prompt, return_tensors="pt").to("cuda" if torch.cuda.is_available() else "cpu")
    outputs = model.generate(**inputs, max_new_tokens=150)
    return tokenizer.decode(outputs[0], skip_special_tokens=True)

import gradio as gr

interface = gr.Interface(
    fn=healthai_response,
    inputs=gr.Textbox(lines=3, placeholder="Ask a health-related question..."),
    outputs="text",
    title="ðŸ©º HealthAI Assistant",
    description="An intelligent health assistant powered by IBM Granite. Ask only health-related questions."
)

interface.launch(share=True)